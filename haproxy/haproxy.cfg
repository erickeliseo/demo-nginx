#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    #chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     40000
    #user        haproxy
    #group       haproxy
    daemon

    # turn on stats unix socket
    #stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    900s
    timeout queue           15m
    timeout connect         900s
    timeout client          15m
    timeout server          15m
    timeout http-keep-alive 900s
    timeout check           900s
    maxconn                 40000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------

frontend ft_haproxy
  bind 0.0.0.0:7011
  default_backend bk_haproxy
  errorfile 408 /dev/null

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------

backend bk_haproxy
  balance roundrobin
  cookie SERVERID insert indirect nocache
  server sa01 apache-01.example.com:80 check cookie sa01
  server sa02 apache-02.example.com:80 check cookie sa02
  server sa03 apache-03.example.com:80 check cookie sa03
